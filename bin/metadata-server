#! /bin/sh

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
# Copyright 2012, Ricardo Duarte (ricardo.duarte@outlook.com                 #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

if [ -z "$ONE_LOCATION" ]; then
    METADATA_PID=/var/run/one/metadata-server.pid
    METADATA_SERVER=/usr/lib/one/ruby/cloud/metadata/metadata-server.rb
    METADATA_LOCK_FILE=/var/lock/one/.metadata.lock
    METADATA_LOG=/var/log/one/metadata-server.log
    METADATA_LOG_ERROR=/var/log/one/metadata-server.error
    METADATA_ETC=/etc/one/metadata.conf
else
    METADATA_PID=$ONE_LOCATION/var/metadata-server.pid
    METADATA_SERVER=$ONE_LOCATION/lib/ruby/cloud/metadata/metadata-server.rb
    METADATA_LOCK_FILE=$ONE_LOCATION/var/.metadata.lock
    METADATA_LOG=$ONE_LOCATION/var/metadata-server.log
    METADATA_LOG_ERROR=$ONE_LOCATION/var/metadata-server.error
    METADATA_ETC=$ONE_LOCATION/etc/metadata.conf
fi

setup()
{
    TMPDIR=$(grep ^:tmpdir: $METADATA_ETC|awk '{print $2}')

    if [ -n "$TMPDIR" ]; then
        export TMPDIR
        mkdir -p $TMPDIR
    fi

	if [ -f $METADATA_LOCK_FILE ]; then
		if [ -f  $METADATA_PID ]; then
			ONEPID=`cat $METADATA_PID`
			ps $METADATA_PID > /dev/null 2>&1
			if [ $? -eq 0 ]; then
				echo "metadata-server is still running (PID:$METADATA_PID)."
				exit 1
			fi
		fi
		echo "Stale .lock detected. Erasing it."
		rm $LOCK_FILE
	fi
}

start()
{
	if [ ! -f "$METADATA_SERVER" ]; then
		echo "Cannot find $METADATA_SERVER."
		exit 1
	fi

	# Start the metadata-server daemon
	ruby $METADATA_SERVER >$METADATA_LOG 2>$METADATA_LOG_ERROR &

	LASTRC=$?
	LASTPID=$!

	if [ $LASTRC -ne 0 ]; then
		echo "Error executing metadata-server."
		echo "Check $METADATA_LOG for more information"
		exit 1
	else
		echo $LASTPID > $METADATA_PID
	fi

	sleep 2
	ps $LASTPID > /dev/null 2>&1

	if [ $? -ne 0 ]; then
		echo "Error executing metadata-server."
		echo "Check $METADATA_LOG for more information"
		exit 1
	fi

	echo "metadata-server started"
}

#
# Function that stops the daemon/service
#
stop()
{
	if [ ! -f $METADATA_PID ]; then
		echo "Couldn't find metadata-server process pid."
		exit 1
	fi

	# Kill the metadata-server daemon

	kill -INT `cat $METADATA_PID` > /dev/null 2>&1

	# Remove pid files

	rm -f $METADATA_PID > /dev/null 2>&1

	echo "metadata-server stopped"
}


case "$1" in
  start)
	setup
	start
	;;
  stop)
	stop
	;;
  *)
	echo "Usage: metadata-server {start|stop}" >&2
	exit 3
	;;
esac





